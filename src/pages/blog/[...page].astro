---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogCard from "../../components/BlogCard.astro";
import {getCollection} from "astro:content";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";

import RSS from "../../assets/icons/rss.svg";
import Previous from "../../assets/icons/previous.svg";
import Next from "../../assets/icons/next.svg";

dayjs.extend(utc);

const currentDate = dayjs().utc();

const posts = (await getCollection("blog"))
    .filter(post => {
        const postDate = dayjs(post.data.pubDate).utc();
        return postDate.isBefore(currentDate, "second") || postDate.isSame(currentDate, "second");
    })
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const url = new URL(Astro.request.url);
const pageParam = url.searchParams.get("page");

const currentPage = pageParam ? Number(pageParam) : 1;
if (isNaN(currentPage) || currentPage < 1) {
    return Astro.redirect("/404")
}

const pageSize = 5;

const startIndex = (currentPage - 1) * pageSize;
const endIndex = startIndex + pageSize;
const paginatedPosts = posts.slice(startIndex, endIndex);

const totalPages = Math.ceil(posts.length / pageSize);
const prevPage = currentPage > 1 ? `/blog?page=${currentPage - 1}` : null;
const nextPage = currentPage < totalPages ? `/blog?page=${currentPage + 1}` : null;

if (paginatedPosts.length === 0 && currentPage > 1) {
    return Astro.redirect("/404")
}
---

<BaseLayout title="Blog"
            description="Read insightful articles by Sam Packer covering software development, tech trends, project experiences, and practical tips. Stay updated and enhance your skills through engaging, informative content."
            sideBarActiveItemID="blog">
    <div class="flex mb-5 items-center">
        <div class="page-title !mb-0">Blog</div>
        <a data-event="RSS Button"
           href="/rss.xml"
           target="_blank"
           class="mx-3"
           aria-label="RSS Feed"
           title="RSS Feed">
            <RSS width={36} height={36} fill="currentColor" class="hover:fill-current hover:text-primary"/>
        </a>
    </div>

    <div class="card-spacing">
        {paginatedPosts.length === 0 ? (
                <div class="bg-base-200 border border-error text-error rounded-xl p-6 text-sm shadow-md">
                    <p class="font-semibold text-base">No posts available</p>
                    <p class="mt-1 text-base-content">
                        It looks like there arenâ€™t any blog posts to show just yet. New content will be published
                        soon, stay tuned!
                    </p>
                </div>
        ) : (
            paginatedPosts.map((post) => (
                    <BlogCard
                            post={post}
                            href={`/blog/${post.id}/`}
                            target="_self"
                            referrer="blog"
                    />
            ))
        )}
    </div>

    <div class="flex justify-between">
        {
            prevPage ? (
                            <a href={prevPage} class="btn btn-ghost my-10 mx-5">
                                <Previous width={24} height={24} fill="currentColor" class="h-6 w-6 md:h-8 md:w-8"/>
                                Newer posts
                            </a>
                ) :
                    <div/>
        }

        {
            nextPage ? (
                            <a href={nextPage} class="btn btn-ghost my-10 mx-5">
                                Older posts
                                <Next width={24} height={24} fill="currentColor" class="h-6 w-6 md:h-8 md:w-8"/>
                            </a>
                ) :
                    <div/>
        }
    </div>
</BaseLayout>