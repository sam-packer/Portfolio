---
import BaseLayout from "@layouts/BaseLayout.astro";
import BlogCard from "@components/BlogCard.astro";
import {getCollection} from "astro:content";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import createSlug from "../../../../lib/createSlug";

dayjs.extend(utc);

// Read the tag from the dynamic route parameter
const tag = Astro.params.tag;

// Read the page number from the query parameter (default to 1 if not present)
const url = new URL(Astro.request.url);
const pageParam = url.searchParams.get("page");

const currentPage = pageParam ? Number(pageParam) : 1;
if (isNaN(currentPage) || currentPage < 1) {
    return Astro.redirect("/404")
}

// Get all blog posts and filter for published ones (up to now)
const now = dayjs().utc();
const allPosts = await getCollection("blog");
const posts = allPosts.filter(post => {
        const postDate = dayjs(post.data.pubDate).utc();
        return postDate.isBefore(now, "second") || postDate.isSame(now, "second");
    }
).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()).filter(post => post.data.tags?.includes(tag));

// Pagination logic
const pageSize = 5;
const startIndex = (currentPage - 1) * pageSize;
const endIndex = startIndex + pageSize;
const paginatedPosts = posts.slice(startIndex, endIndex);

const totalPages = Math.ceil(posts.length / pageSize);
const prevPage = currentPage > 1 ? `/blog/tag/${tag}?page=${currentPage - 1}` : null;
const nextPage = currentPage < totalPages ? `/blog/tag/${tag}?page=${currentPage + 1}` : null;

if (paginatedPosts.length === 0 && currentPage > 1) {
    return Astro.redirect("/404")
}
---

<BaseLayout title={"Blog - " + tag + " | Sam Packer"} sideBarActiveItemID="blog">
    <a class="no-underline flex items-center space-x-2 mb-3" href="javascript:history.back()">
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"
             style="fill: currentColor;">
            <path d="M21 11H6.414l5.293-5.293-1.414-1.414L2.586 12l7.707 7.707 1.414-1.414L6.414 13H21z"></path>
        </svg>
        <span>Back</span>
    </a>

    <div class="page-title">Blog - {tag}</div>

    <div class="card-spacing">
        {
            paginatedPosts.length === 0 ? (
                            <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
                                <p class="font-bold">Sorry!</p>
                                <p>There are no blog posts to show at the moment. Check back later!</p>
                            </div>
                ) :
                (
                    paginatedPosts.map((post) => (
                            <BlogCard
                                    post={post}
                                    href={"/blog/" + createSlug(post.data.title)}
                                    target="_self"
                                    referrer="blog"
                            />
                    ))
                )
        }
    </div>

    <div class="flex justify-between">
        {prevPage ? (
                        <a href={prevPage} class="btn btn-ghost my-10 mx-5">
                            <svg class="h-6 w-6 fill-current md:h-8 md:w-8"
                                 xmlns="http://www.w3.org/2000/svg"
                                 width="24"
                                 height="24"
                                 viewBox="0 0 24 24">
                                <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z"/>
                            </svg>
                            Newer posts
                        </a>
            ) :
                <div/>}

        {nextPage ? (
                        <a href={nextPage} class="btn btn-ghost my-10 mx-5">
                            Older posts
                            <svg class="h-6 w-6 fill-current md:h-8 md:w-8"
                                 xmlns="http://www.w3.org/2000/svg"
                                 width="24"
                                 height="24"
                                 viewBox="0 0 24 24">
                                <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"/>
                            </svg>
                        </a>
            ) :
                <div/>}
    </div>
</BaseLayout>
